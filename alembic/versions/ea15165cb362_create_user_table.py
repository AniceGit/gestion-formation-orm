"""create user table

Revision ID: ea15165cb362
Revises: 
Create Date: 2025-06-05 10:36:11.181587

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ea15165cb362'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin_role',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('room',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('capacity', sa.Integer(), nullable=False),
    sa.Column('localization', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('stuff', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('firstname', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('age', sa.Integer(), nullable=False),
    sa.Column('date_create', sa.Date(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('role', sa.Enum('user_learner', 'user_trainer', 'user_techingstaff', 'user_admin', name='userrole'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('promotion_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('learner',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('birth_date', sa.Date(), nullable=False),
    sa.Column('study_level', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('platform_registration_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('teaching_staff',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('work', sa.Enum('EDUCATIONAL_MANAGER', 'PROJECT_HANDLER', name='teachingstaffrole'), nullable=False),
    sa.Column('date_appointement', sa.Date(), nullable=False),
    sa.Column('responsabilities', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('trainer',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_user', sa.Integer(), nullable=False),
    sa.Column('speciality', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date_hire', sa.Date(), nullable=False),
    sa.Column('hourly_rate', sa.Float(), nullable=False),
    sa.Column('bio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['id_user'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('admin_adminrole_link',
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['admin_role.id'], ),
    sa.PrimaryKeyConstraint('admin_id', 'role_id')
    )
    op.create_table('session',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('max_capacity', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('OPEN', 'CLOSED', 'ARCHIVED', name='statusenum'), nullable=False),
    sa.Column('requirements', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('id_trainer', sa.Integer(), nullable=False),
    sa.Column('id_room', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_room'], ['room.id'], ),
    sa.ForeignKeyConstraint(['id_trainer'], ['trainer.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inscription',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inscription_date', sa.Date(), nullable=False),
    sa.Column('inscription_status', sa.Enum('ENREGISTRE', 'DESINSCRIT', 'EN_ATTENTE', name='inscriptionstatusenum'), nullable=False),
    sa.Column('presence', sa.Boolean(), nullable=True),
    sa.Column('id_session', sa.Integer(), nullable=False),
    sa.Column('id_learner', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_learner'], ['learner.id'], ),
    sa.ForeignKeyConstraint(['id_session'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('inscription')
    op.drop_table('session')
    op.drop_table('admin_adminrole_link')
    op.drop_table('trainer')
    op.drop_table('teaching_staff')
    op.drop_table('learner')
    op.drop_table('admin')
    op.drop_table('user')
    op.drop_table('room')
    op.drop_table('admin_role')
    # ### end Alembic commands ###
